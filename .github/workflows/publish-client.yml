name: Publish Client to npm Registry

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., patch, minor, major, or specific version)'
        required: true
        default: 'patch'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'

      - name: Install dependencies
        run: npm ci

      - name: Build client package
        run: |
          cd packages/client
          npm run build

      - name: Update package.json for npm registry
        run: |
          cd packages/client
          # Remove GitHub specific publishConfig if present
          sed -i '/"publishConfig": {/,/}/d' package.json
          # Update main, module, and types fields for proper package publishing
          node -e "
            const pkg = require('./package.json');
            pkg.main = 'dist/flexdoc.umd.js';
            pkg.module = 'dist/flexdoc.es.js';
            pkg.types = 'dist/index.d.ts';
            pkg.files = ['dist', 'README.md'];
            require('fs').writeFileSync('./package.json', JSON.stringify(pkg, null, 2));
          "

      - name: Version and publish (on manual trigger)
        if: github.event_name == 'workflow_dispatch'
        run: |
          cd packages/client
          # Only update version if it's different from current version
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          if [ "$CURRENT_VERSION" != "${{ github.event.inputs.version }}" ]; then
            npm version ${{ github.event.inputs.version }} --no-git-tag-version
          fi
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish on release
        if: github.event_name == 'release'
        run: |
          cd packages/client
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
